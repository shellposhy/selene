<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.selene.dataing.provider.dao.DataingDataTaskSubMapper">
	<resultMap id="resultMap" type="com.selene.dataing.model.DataingDataTaskSub">
		<result property="id" column="ID" />
		<result property="taskId" column="Task_ID" />
		<result property="subtaskName" column="Subtask_Name" />
		<result property="subtaskType" column="Subtask_Type" />
		<result property="subtaskTarget" column="Subtask_Target" />
		<result property="subtaskStatus" column="Subtask_Status" />
		<result property="subtaskProgress" column="Subtask_Progress" />
		<result property="subtaskMemo" column="Subtask_Memo" />
		<result property="creatorId" column="Creator_ID" />
		<result property="createTime" column="Create_Time" />
		<result property="updaterId" column="Updater_ID" />
		<result property="updateTime" column="Update_Time" />
	</resultMap>

	<insert id="insert">
		<selectKey resultType="java.lang.Integer" order="AFTER" keyProperty="id">
			SELECT LAST_INSERT_ID()
		</selectKey>
		INSERT INTO 
			data_task_sub(Task_ID,Subtask_Name,Subtask_Type,Subtask_Target,Subtask_Status,Subtask_Progress,Subtask_Memo,Creator_ID,Update_Time,Updater_ID,Update_Time)
		VALUES
			(#{taskId},#{subtaskName},#{subtaskType},#{subtaskTarget},#{subtaskStatus},#{subtaskProgress},#{subtaskMemo},#{creatorId},#{createTime},#{updaterId},#{updateTime})
	</insert>
	
	<select id="find" resultMap="resultMap" parameterType="java.lang.Integer">
		SELECT
			ID,License,Model_Name,Model_Code,Model_Type,Fields_Name,For_System,Task_ID,Memo,Creator_ID,Update_Time,Updater_ID,Update_Time
		FROM
			data_model
		WHERE 
			ID=#{id}
	</select>
	
	<select id="findByType" resultMap="resultMap" parameterType="java.util.Map">
		SELECT
			ID,License,Model_Name,Model_Code,Model_Type,Fields_Name,For_System,Task_ID,Memo,Creator_ID,Update_Time,Updater_ID,Update_Time
		FROM
			data_model
		WHERE 
			Model_Type=#{modelType} AND ( For_System=1 OR License=#{license} )
	</select>
	
	<select id="findByPage" resultMap="resultMap" parameterType="java.util.Map">
		SELECT
			ID,License,Model_Name,Model_Code,Model_Type,Fields_Name,For_System,Task_ID,Memo,Creator_ID,Update_Time,Updater_ID,Update_Time
		FROM
			data_model
		WHERE
			For_System=1 OR License=#{license}
		LIMIT 
			#{first},#{size}
	</select>
	
	<select id="count" resultType="int" parameterType="java.lang.String">
		SELECT
			COUNT(*)
		FROM
			data_model
		WHERE
			For_System=1 OR License=#{license}
	</select>
	
	<select id="findNameByPage" resultMap="resultMap" parameterType="java.util.Map">
		SELECT
			ID,License,Model_Name,Model_Code,Model_Type,Fields_Name,For_System,Task_ID,Memo,Creator_ID,Update_Time,Updater_ID,Update_Time
		FROM
			data_model
		WHERE
			 ( For_System=1 OR License=#{license} ) AND Model_Name like "%"#{name}"%" 
		LIMIT 
			#{first},#{size}
	</select>
	
	<select id="countByName" resultType="int" parameterType="java.util.Map">
		SELECT
			COUNT(*)
		FROM
			data_model
		WHERE
			( For_System=1 OR License=#{license} ) AND Model_Name like "%"#{name}"%"
	</select>
	
	<update id="update">
		UPDATE 
			data_model
		<set>
			<if test="modelName != null">Model_Name = #{modelName},</if>
			<if test="modelCode != null">Model_Code = #{modelCode},</if>
			<if test="modelType != null">Model_Type = #{modelType},</if>
			<if test="fieldsName != null">Fields_Name = #{fieldsName},</if>
			<if test="forSystem != null">For_System = #{forSystem},</if>
			<if test="taskId != null">Task_ID = #{taskId},</if>
			<if test="memo != null">Memo = #{memo},</if>
			<if test="updaterId != null">Updater_ID = #{updaterId},</if>
			<if test="updateTime != null">Update_Time = #{updateTime}</if>
		</set>
		WHERE 
			ID=#{id}
	</update>
	
	<delete id="delete">
		DELETE FROM 
			data_model 
		WHERE 
			ID= #{id}
	</delete>
</mapper>